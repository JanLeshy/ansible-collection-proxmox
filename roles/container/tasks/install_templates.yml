---
- name: Get list of nodes members of the Proxmox cluster
  ansible.builtin.uri:
    url: https://{{ proxmox_api_host }}:8006/api2/json/nodes
    method: GET
    status_code: [200]
    validate_certs: "{{ proxmox_api_validate_certs }}"
    headers:
      Authorization: "PVEAPIToken={{ proxmox_api_user }}!{{ proxmox_api_token_id }}={{ proxmox_api_token_secret }}"
      Content-Type: application/json
  register: _nodes_results

- name: Set facts to install OS templates
  ansible.builtin.set_fact:
    _list_of_templates: "{{ proxmox_container | community.general.json_query('[*].ostemplate') | unique }}"
    _nodes: "{{_nodes_results | community.general.json_query('json.data[*].node') }}"
    _ostemplate_regex: '^([a-z]+):([a-z]+)/(.*)'

- name: Download proxmox appliance container templates
  community.general.proxmox_template:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    node: "{{ item.0 }}"
    storage: "{{ item.1 | regex_search(_ostemplate_regex, '\\1') | first }}"
    content_type: "{{ item.1 | regex_search(_ostemplate_regex, '\\2') | first }}"
    template: "{{ item.1 | regex_search(_ostemplate_regex, '\\3') | first }}"
    timeout: 300
    validate_certs: "{{ proxmox_api_validate_certs }}"
  loop: "{{ _nodes | product(_list_of_templates) | list }}"
